apply plugin: 'com.android.application'

def cfg = rootProject.ext.cfg
def deps = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId cfg.applicationId
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.versionCode
        versionName cfg.versionName
        multiDexEnabled true
        buildConfigField "long", "BUILD_TIME", System.currentTimeMillis() + "L"
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVICE_API_URL", "\"www.baidu.com\"" //需要根据服务器url改动
        }

        debug {
            applicationIdSuffix ".dev"
            versionNameSuffix "_dev"
            minifyEnabled false
            debuggable true
//            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "SERVICE_API_URL", "\"www.baidu.com\"" //需要根据正式服务器url改动
        }
    }

    //多渠道打包
    productFlavors {
        product {
            //发布正式基本版本
            minSdkVersion cfg.minSdk
        }
    }

    //签名配置
    signingConfigs {
        release {
            storeFile file("keystore/release.keystore") //签名文件
            storePassword "basepassword"
            keyAlias "baseandroid"
            keyPassword "basepassword"
        }

//        debug {
//            storeFile file("keystore/debug.keystore")
//            storePassword "storedebug"
//            keyAlias "basedebug"
//            keyPassword "keydebug"
//        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    //注释冲突
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //common
    compile deps.v4
    compile deps.v7
    compile deps.design
    compile deps.gson
    compile deps.retrofit
    compile deps.gson_converter
    compile deps.rxjava_adapter
    compile deps.rxjava
    compile deps.eventbus
}
